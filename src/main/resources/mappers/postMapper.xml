<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.memo.post.dao.PostDAO">
	<select id="selectPostListByUserId" parameterType="map" resultType="com.memo.post.model.Post">
		SELECT
			`id`
			, `userId`
			, `subject`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		FROM 
			`post`
		WHERE
			`userId` = #{userId}
			<!-- 페이징이 없는 경우(첫 페이지) -->
           <if test="direction == null">
		ORDER BY `id` DESC
		   </if>
		   <!-- 이전을 클릭 했을때 -->
		   <if test="direction == 'prev'">
		   <![CDATA[ 
		   AND `id` > #{standardId}
		   ]]>
		ORDER BY `id` ASC   
		   </if>
		   
		   <!-- 다음을 클릭 했을때 -->
		   <if test="direction == 'next'">
		   <![CDATA[
		   AND `id` > #{standardId}
		   ]]>
		   </if>
		LIMIT ${limit}
	</select>
	
	<select id="selectPostIdByUserIdAndSort" parameterType="map" resultType="int">
		SELECT
			`id`
		FROM 
			`post`
		WHERE
			`userId` = #{userId}
		ORDER BY `id` ${sort}
		LIMIT 1
	</select>
	
	<insert id="insertPost" parameterType="map">
		INSERT INTO `post`
		(
			`userId`
			, `subject`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		)
		VALUES
		(
			#{userId}
			, #{subject}
			, #{content}
			, #{imagePath}
			, NOW()
			, NOW()
		)
	</insert>
	
	<select id="selectPost" parameterType="int" resultType="com.memo.post.model.Post">
		SELECT
			`id`
			, `userId`
			, `subject`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		FROM 
			`post`
		WHERE
			`id` = #{postId}
	</select>
	
	<update id="updatePost" parameterType="map">
		UPDATE `post`
		SET
			`subject` = #{subject}
			, `content` = #{content}
			, updatedAt = NOW()
			<!-- imagePath가 있을 때만 수정한다. -->
			<if test="imagePath != null">, imagePath = #{imagePath}</if>
		WHERE
			`id` = #{id}
	</update>
	
	<delete id="deletePost" parameterType="int">
		DELETE
		FROM
			`post`
		WHERE
			`id` = #{id}
	</delete>

	
</mapper>